"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var shared_1 = require("./shared");
var DEFAULT_HYDRATION_ID = Symbol('defaultId');
var DEFAULT_HYDRATION_PREFIX = 'hydration';
exports.EFFECT_ID = Symbol('react-hydrate');
var HydrationManager = /** @class */ (function () {
    function HydrationManager() {
        var e_1, _a;
        var _this = this;
        this.hydrated = false;
        this.effect = {
            id: exports.EFFECT_ID,
            betweenEachPass: function () {
                _this.ids.clear();
                _this.hydration.clear();
            },
        };
        this.ids = new Map();
        this.hydration = new Map();
        if (typeof document !== 'undefined') {
            try {
                for (var _b = tslib_1.__values(document.querySelectorAll("[" + shared_1.HYDRATION_ATTRIBUTE + "]")), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var element = _c.value;
                    this.hydration.set(element.getAttribute(shared_1.HYDRATION_ATTRIBUTE), element.innerHTML);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    }
    HydrationManager.prototype.hydrationId = function (id) {
        var finalId = id || DEFAULT_HYDRATION_ID;
        var current = this.ids.get(finalId) || 0;
        this.ids.set(finalId, current + 1);
        return "" + (id || DEFAULT_HYDRATION_PREFIX) + (current + 1);
    };
    HydrationManager.prototype.getHydration = function (id) {
        return this.hydration.get(id);
    };
    return HydrationManager;
}());
exports.HydrationManager = HydrationManager;
