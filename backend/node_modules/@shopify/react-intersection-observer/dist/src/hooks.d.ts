import { Ref } from 'react';
import { UnsupportedBehavior } from './types';
interface Options {
    root?: Element | string | null;
    rootMargin?: string;
    threshold?: number | number[];
    children?: React.ReactNode;
    wrapperComponent?: string;
    unsupportedBehavior?: UnsupportedBehavior;
}
export declare function useIntersection({ root, rootMargin, threshold, unsupportedBehavior, }?: Options): [IntersectionObserverEntry, Ref<HTMLElement | null>];
export declare function useValueTracking<T>(value: T, onChange: (value: T, oldValue: T) => void): void;
export {};
//# sourceMappingURL=hooks.d.ts.map